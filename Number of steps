
// Sample code to perform I/O:

process.stdin.resume();
process.stdin.setEncoding("utf-8");
var stdin_input = "";

process.stdin.on("data", function (input) {
    stdin_input += input;                               // Reading input from STDIN
});

process.stdin.on("end", function () {
   main(stdin_input);
});

function main(input) {
    let customIP = input.split("\n");
    let a  = customIP[1].split(' ').map(item => parseInt(item));
    let b  = customIP[2].split(' ').map(item => parseInt(item));
     let min = a.reduce((minEle, curEle) =>{
  return minEle < curEle ? minEle : curEle;
});
 
    
const isAllArrayElementsEqual = () => {
  let check = true;
   a.forEach((item, index) => {
     if(a[index+1] !== undefined && item !== a[index+1]){
         check =  false;
        }
     })
   return check;
 }

const isAllElementsInBGreaterThanA = () => {
  let check = true;
  
  
  b.forEach((item,index) => {
    if( a[index] >= item ){ check = false; }
  })
  
  return check;
}

let c = 0;
while(true){
   
  if(isAllArrayElementsEqual()){
     break;
  }else {
    if(isAllElementsInBGreaterThanA()){
      c = -1; break;
    } 
  }
   
  a.forEach((item, i) => {
    if(item > min && a[i] >= b[i]){
      a[i] = a[i] - b[i];
      c++;
    }
  })
  
 min = a.reduce((minEle, curEle) =>{
  return minEle < curEle ? minEle : curEle;
 });
  
}


    process.stdout.write(c+"\n");       // Writing output to STDOUT
}

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail

// Write your code here
